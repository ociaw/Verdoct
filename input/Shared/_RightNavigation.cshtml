@{
    String indexFileName = Context.Settings.GetIndexFileName();
    foreach(IDocument doc in OutputPages.GetChildrenOf(indexFileName)
        // Ensure the API path is added even if it's not a direct child of the root page
        .Concat(OutputPages.Get(NormalizedPath.Combine(Context.GetPath(DocsKeys.ApiPath), indexFileName)))
        .Where(x => x.GetBool(SiteKeys.ShowInNavigation, true))
        // Ensure that duplicate API links aren't shown 
        .Distinct()
        .OrderBy(x => x.GetInt(Keys.Order)))
    {
        @Html.DocumentLink(
            doc,
            doc.GetString(SiteKeys.NavigationTitle, doc.GetTitle()),
            new Dictionary<object, object> { { "class", "nav-link" } })
    }
}
@if (Context.GetBool(WebKeys.GenerateSearchIndex))
{
    IDocument searchDoc = OutputPages["Search.html"].First();
    // If search is enabled, show a link to the search page
    <a href="@Context.GetLink(searchDoc)" class="nav-link">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
            <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"/>
        </svg>
    </a>
}
