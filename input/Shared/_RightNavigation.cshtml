@{
    String indexFileName = Context.Settings.GetIndexFileName();
    foreach(IDocument doc in OutputPages.GetChildrenOf(indexFileName)
        // Ensure the API path is added even if it's not a direct child of the root page
        .Concat(OutputPages.Get(NormalizedPath.Combine(Context.GetPath(DocsKeys.ApiPath), indexFileName)))
        .Where(x => x is object && x.GetBool(SiteKeys.ShowInNavigation, true))
        // Ensure that duplicate API links aren't shown 
        .Distinct()
        .OrderBy(x => x.GetInt(Keys.Order)))
    {
        @Html.DocumentLink(
            doc,
            doc.GetString(SiteKeys.NavigationTitle, doc.GetTitle()),
            new Dictionary<object, object> { { "class", "nav-link" } })
    }
}
@if (Context.GetBool(WebKeys.GenerateSearchIndex))
{
    IDocument searchDoc = OutputPages["Search.html"].First();
    // If search is enabled, show a link to the search page
    <a href="@Context.GetLink(searchDoc)" class="nav-link nav-search" aria-label="Search">
        <span>Search</span>
    </a>
}
