ArchivePipelines: Api
ArchiveFilter: => GetString("Kind") == "Namespace" || GetString("Kind") == "Revision"
ArchiveOrderKey: DisplayName
DestinationPath: => GetPath("ApiPath").Combine("index.html")
NoSidebar: true
Title: API
Order: 100
Xref: api
---
@{
    var revisions = Model.GetChildren()
        .Where(x => x.GetString("Kind") == "Revision")
        .OrderByDescending(x => x.GetDateTimeOffset(nameof(SiteKeys.RevisionTimestamp)))
        .ToDocumentList();
    var useRevisions = revisions.Any();
}

@if (!useRevisions)
{
    <h1>Namespaces</h1>
    @foreach (IDocument document in Model.GetChildren())
    {
        <h2>@Context.GetTypeLink(document)</h2>
        string summary = document.GetString(CodeAnalysisKeys.Summary);
        if (!summary.IsNullOrWhiteSpace())
        {
            <div>
                @Html.Raw(summary)
            </div>
        }
    }
    return;
}

<h1>Versions</h1>
@foreach (IDocument document in revisions)
{
    <h2>@Context.GetTypeLink(document)</h2>
    <dl>
        <dt>Latest Commit Date</dt>
        <dd>@document.GetDateTimeOffset(nameof(SiteKeys.RevisionTimestamp)).UtcDateTime.ToShortDateString()</dd>
        <dt>Latest Commit ID</dt>
        <dd><code>@document.Get(nameof(SiteKeys.RevisionId))</code></dd>
    </dl>
    string summary = document.GetString(CodeAnalysisKeys.Summary);
    if (!summary.IsNullOrWhiteSpace())
    {
        <div>
            @Html.Raw(summary)
        </div>
    }
}